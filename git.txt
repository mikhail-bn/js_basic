// ОСНОВЫ GIT ===============================================================================================

Инициализация в папке git         git init

Проверка связанности директории с репозиторием           git remote -v

Связать пустой репозиторий с локальной папкой              git remote add origin --ссылка_с_гитхаб.git--
Связать пустую локальную папку с репозиторием в кот есть файл/ы              git clone --ссылка_с_гитхаб.git--

Проверка наличия файлов    ls
Проверка наличия скрытых файлов   ls -a

Параметры git

Все    git config
Основные необходимые   git config user.name
Основные необходимые   git config user.email

Изменить 
git config user.email "новый.маил@почта.ком"

Команда git status показывает файлы для отправки на гит красным если они не на гит хаб и не закомичены не в стейдже

Добавить файлы для записи в stage       git add somefile somefile somefile        если добавить все то      git add .
После этого файлы стают зелеными при запуске команды git status

Комит
git commit -m "some_comment"

LOG
git log  показывает Ключ коммита Бренч Автор Дата
краткая запись git log --oneline
Выйти из git log клавиша q

Отправка подготовленных изменений на гитхаб 
git push
Подробно 
git push --ссылка_с_гитхаб.git-- branch

Общий алгоритм добавления на github.com

1. git status
2. git add . или git add justthisfile1.txt justthisfile2.txt
3. git commit -m "some_comment"
4. git push --ссылка_с_гитхаб.git--  --branch (для копирования "ссылки" git remote -v для копирования  текущей "branch" git branch)
5. git log  или git log --oneline


ДОПОЛНИТЕЛЬНЫЕ КОМАНДЫ

git reset some_file.txt	
Команда убирает указанный.файл из стейдж

git diff
показывает строчки изменения

git diff some_file.txt
показывает строчки изменения только в some_file.txt

git reset --hard
отменяет изменения до педыдущего комита

git pull
забирает изменения сделанные другими в репозитории и применяет из на локальном компе	


// ВЕТКИ =======================================================================================

git branch
показывает ветки

git branch new_branch
создает новую ветку new_branch

git checkout new_branch
переключает нас на ветку new_branch

git merge some_branch
сливает содержимое some_branch в текущую активную ветку

git branch -d some_branch
git branch -D some_branch
удаляет ветку some_branch





